/**
 * Copyright (c) 2002-2017 "Neo Technology,"
 * Network Engine for Objects in Lund AB [http://neotechnology.com]
 *
 * This file is part of Neo4j.
 *
 * Neo4j is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package qa;

import org.junit.Test;

import org.neo4j.collection.primitive.Primitive;
import org.neo4j.collection.primitive.PrimitiveLongIntMap;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;


public class PrimitiveCollectionScratchPadTest
{
//        DebugMonitor monitor = new DebugMonitor( new int[] { 3 }, new long[] { 7541468417122517635L, 3777659743519674290L, 6762238128945853988L } );
//        PrimitiveLongSet set =
//                new PrimitiveLongHashSet( Primitive.DEFAULT_HASH_FUNCTION, NumberArrayFactory.HEAP,
//                        DEFAULT_HEAP_CAPACITY, monitor );
//                new PrimitiveLongHashSet( new LongKeyTable<>( DEFAULT_HEAP_CAPACITY, Primitive.VALUE_MARKER ),
//                        Primitive.VALUE_MARKER, monitor );

    @Test
    public void shouldOnlyContainAddedValues() throws Exception
    {
        // GIVEN
        PrimitiveLongIntMap map = Primitive.longIntMap();
        map.remove( 3821415687251991000L );
        map.remove( 194460687107857414L );
        map.remove( 6793502161771351100L );
        map.put( 4489092411343398666L, 1163287862 );
        map.remove( 1658333109375671135L );
        map.put( 768645519300354659L, 109501117 );
        map.put( 8871509499931908959L, 996947284 );
        map.remove( 4489092411343398666L );
        map.remove( 7652716608180484181L );
        map.put( 5951253114866902525L, 961414198 );
        map.remove( 5951253114866902525L );
        map.remove( 5615913060876885442L );
        map.remove( 3366940386296899045L );
        map.put( 768645519300354659L, 1122965792 );
        map.remove( 8723179366063238684L );
        map.put( 768645519300354659L, 493926912 );
        map.put( 2224008093822379473L, 707967231 );
        map.put( 8871509499931908959L, 1543046758 );
        map.put( 768645519300354659L, 290330879 );
        map.put( 8871509499931908959L, 1011797811 );
        map.put( 1309793143595621316L, 1937694204 );
        map.put( 1309793143595621316L, 86930455 );
        map.put( 2224008093822379473L, 910739268 );
        map.put( 4115822549370633846L, 1218696938 );
        map.put( 8134675466026434513L, 2144041820 );
        map.put( 1793511251570265031L, 2083005314 );
        map.put( 8044962169968192671L, 468295479 );
        map.put( 4992140789951613603L, 1132821234 );
        map.put( 8936500579552003471L, 843127655 );
        map.put( 8044962169968192671L, 1454764792 );
        map.remove( 1793511251570265031L );
        map.put( 7576199192364039754L, 716058364 );
        map.put( 4228249731620806491L, 247038011 );
        map.put( 6370208568487928842L, 947031161 );
        map.remove( 4115822549370633846L );
        map.put( 8627099257571901658L, 110121479 );
        map.put( 777213958503907955L, 2042844279 );
        map.put( 7439427242967275168L, 289420063 );
        map.put( 768645519300354659L, 151580876 );
        map.put( 768645519300354659L, 655747025 );
        map.remove( 4444500074493816015L );
        map.put( 2224008093822379473L, 762033593 );
        map.remove( 3737739715105140200L );
        map.put( 534302199737598541L, 1192342017 );
        map.remove( 6370208568487928842L );
        map.remove( 4992140789951613603L );
        map.put( 8086847296282837975L, 1800794000 );
        map.put( 3010510763130212919L, 1970761934 );
        map.put( 7576199192364039754L, 1963083033 );
        map.put( 1228775593309788077L, 861529131 );
        map.put( 6261640285225181006L, 1017050744 );
        map.put( 8936500579552003471L, 1582983028 );
        map.remove( 6138162943851594513L );
        map.remove( 1309793143595621316L );
        map.put( 8871509499931908959L, 1937760531 );
        map.remove( 4750596421741946518L );
        map.put( 7276077523362527153L, 2596037 );
        map.put( 4658316513858418114L, 1041089477 );
        map.put( 1643578842310394979L, 746772332 );
        map.put( 6261640285225181006L, 1960272266 );
        map.put( 6881581280847823271L, 131625708 );
        map.put( 1228775593309788077L, 1788288217 );
        map.remove( 8768710162309948552L );
        map.remove( 2503807442148181477L );
        map.put( 9126887577956273984L, 663399579 );
        map.put( 7454564159930761928L, 249083074 );
        map.remove( 7234771126173072875L );
        map.put( 304741939918955348L, 2059864822 );
        map.put( 147610999123740737L, 656464177 );
        map.put( 5444109157070498269L, 859172952 );
        map.put( 3752277488818284607L, 1438228213 );
        map.remove( 768645519300354659L );
        map.put( 3752277488818284607L, 1534333991 );
        map.put( 5115710543602443054L, 23422521 );
        map.put( 129156589595244191L, 1385705379 );
        map.remove( 3595967551467821608L );
        map.remove( 1228775593309788077L );
        map.put( 3281255950319912793L, 119602568 );
        map.remove( 7276077523362527153L );
        map.put( 5914750134368434672L, 540561753 );
        map.remove( 5522405307192837860L );
        map.put( 9038023519869120957L, 478991685 );
        map.put( 777213958503907955L, 455123799 );
        map.put( 242300216424358542L, 2051708077 );
        map.remove( 1842455570364144884L );
        map.put( 6819611932805934338L, 1454315746 );
        map.put( 8044962169968192671L, 1731123213 );
        map.put( 8086847296282837975L, 82772196 );
        map.put( 9168812621891223512L, 1123770132 );
        map.put( 3349847340430297101L, 861605901 );
        map.put( 344929349008030993L, 759399690 );
        map.remove( 3281255950319912793L );
        map.put( 4169905611663039956L, 443605513 );
        map.remove( 4322698035064088279L );
        map.remove( 2224008093822379473L );
        map.remove( 3752277488818284607L );
        map.put( 679145240934000439L, 708480781 );
        map.remove( 6145551870759223454L );
        map.put( 3349847340430297101L, 1480365155 );
        map.remove( 5643840796560425331L );
        map.put( 7720644668181291103L, 675034817 );
        map.put( 8871509499931908959L, 1492452892 );
        map.put( 9126887577956273984L, 1071718084 );
        map.remove( 1934208643190512836L );
        map.put( 8044962169968192671L, 715916864 );
        map.remove( 9091676808286402924L );
        map.put( 8264218695919180501L, 863315169 );
        map.put( 8871509499931908959L, 721405084 );
        map.remove( 7439427242967275168L );
        map.put( 8079126511633901147L, 1259961900 );
        map.put( 983575306069789210L, 577980500 );
        map.put( 5444109157070498269L, 1917787583 );
        map.put( 5444109157070498269L, 1514888476 );
        map.put( 4511844089101246362L, 1473131092 );
        map.put( 3349847340430297101L, 1726055261 );
        map.put( 6819611932805934338L, 731387926 );
        map.put( 777213958503907955L, 237424829 );
        map.put( 8702865036284092187L, 1886976408 );
        map.remove( 8627099257571901658L );
        map.remove( 6790308908902009440L );
        map.put( 3930040953451165145L, 1044574355 );
        map.remove( 2176295634090646237L );
        map.put( 1561364680532649109L, 647154393 );
        map.put( 667785016594249251L, 48428706 );
        map.put( 1337927692259798207L, 288121647 );
        map.put( 7144331509678342781L, 207310329 );
        map.put( 4233609984818887575L, 1481043864 );
        map.remove( 4169905611663039956L );
        map.put( 5282391144456830511L, 1034634150 );
        map.remove( 5583955826805906703L );
        map.put( 8706756571238784917L, 2049226345 );
        map.put( 3173079676870579697L, 394880042 );
        map.remove( 6535455678799542189L );
        map.put( 3368672082328920928L, 1998959043 );
        map.put( 5444109157070498269L, 966805767 );
        map.put( 7144331509678342781L, 857175952 );
        map.put( 5856160939709757684L, 360394793 );
        map.remove( 5537477693924875361L );
        map.put( 5754787373919052L, 1839413881 );
        map.put( 1689389645703456476L, 1324614475 );
        map.put( 6311816692048895032L, 120801901 );
        map.put( 1479494354469051469L, 1121027240 );
        map.remove( 1411016358917048799L );
        map.put( 717133647651639579L, 775146751 );
        map.put( 3740674445932936986L, 80832766 );
        map.put( 5444109157070498269L, 613554894 );
        map.put( 3930040953451165145L, 1130222922 );
        map.put( 5468000844743216124L, 65714354 );
        map.put( 5637403189331394197L, 621384918 );
        map.remove( 8706756571238784917L );
        map.put( 1561364680532649109L, 568435382 );
        map.put( 3597640929961446317L, 1118647970 );
        map.put( 7620280474171525052L, 1774252101 );
        map.put( 1365153728306636369L, 1318128419 );
        map.put( 129156589595244191L, 178397629 );
        map.put( 3807668363575835203L, 397942382 );
        map.put( 8133591669548316430L, 602135195 );
        map.put( 3010510763130212919L, 1494665432 );
        map.put( 8397526368171093952L, 807689419 );
        map.put( 4690278904838946624L, 37733378 );
        map.put( 3078441883918155333L, 2092702586 );
        map.put( 8044962169968192671L, 1968878002 );
        map.remove( 3930040953451165145L );
        map.put( 7447411449902928235L, 2136938708 );
        map.put( 3208359521299786979L, 864847812 );
        map.put( 3852912741616014813L, 549695017 );
        map.put( 2508714891514940386L, 2048743329 );
        map.put( 7459603486537475821L, 517799800 );
        map.put( 3010510763130212919L, 1766837809 );
        map.put( 7872325106355403507L, 1368940375 );
        map.put( 8936500579552003471L, 216509410 );
        map.remove( 373555355289041677L );
        map.put( 5115710543602443054L, 1969165411 );
        map.put( 5045458079541163714L, 2059528252 );
        map.put( 5606786218706297715L, 883939372 );
        map.put( 4632624431301093582L, 1285145001 );
        map.remove( 6261640285225181006L );
        map.put( 1689389645703456476L, 655077796 );
        map.remove( 2591621899590212714L );
        map.put( 9126887577956273984L, 1478151533 );
        map.put( 3368672082328920928L, 787514918 );
        map.put( 9134619581777876053L, 1730412092 );
        map.put( 7123455287074267914L, 1583900220 );
        map.remove( 6664690845410918736L );
        map.put( 313745570845659875L, 1205115137 );
        map.put( 7963812554836394874L, 1635488689 );
        map.remove( 6683052262242312136L );
        map.remove( 3492535911020448908L );
        map.put( 1479494354469051469L, 762631528 );
        map.put( 4710672563193732764L, 1441841961 );
        map.put( 3798288158700602535L, 438625669 );
        map.remove( 5045458079541163714L );
        map.remove( 7076059645725888677L );
        map.remove( 1267127019732800174L );
        map.put( 3167259547961335000L, 622520684 );
        map.put( 4711149873501869522L, 506598852 );
        map.put( 9098998986369244691L, 795809771 );
        map.put( 7118480456818951556L, 1836752196 );
        map.remove( 269575542934101182L );
        map.put( 6994416964646630225L, 76348717 );
        map.put( 6666817010027196561L, 556735939 );
        map.put( 3368672082328920928L, 1060392820 );
        map.put( 2250215639644779203L, 1742268608 );
        map.put( 6447349467120580001L, 1977204914 );
        map.put( 3580186186379941975L, 473070730 );
        map.put( 717133647651639579L, 617586277 );
        map.put( 7454564159930761928L, 257130586 );
        map.put( 4710672563193732764L, 1181294052 );
        map.put( 6672515152363464033L, 867727247 );
        map.put( 1337927692259798207L, 947189825 );
        map.put( 777213958503907955L, 288682370 );
        map.put( 1337927692259798207L, 766774261 );
        map.put( 9134619581777876053L, 525129121 );
        map.remove( 2508714891514940386L );
        map.put( 8321932469655244381L, 872855557 );
        map.put( 775383936648376630L, 2006123898 );
        map.remove( 129156589595244191L );
        map.put( 6447349467120580001L, 990834165 );
        map.put( 6672515152363464033L, 1367896471 );
        map.put( 2345929899728008256L, 1854454687 );
        map.put( 7365521569203165075L, 338429852 );
        map.put( 4511844089101246362L, 312559164 );
        map.put( 5315407386110456795L, 5789768 );
        map.put( 8999394204358432479L, 221791020 );
        map.put( 3898945701238605957L, 929985946 );
        map.put( 1356677585092393839L, 1711161498 );
        map.put( 3121777468287241364L, 205224522 );
        map.remove( 4308063804131539266L );
        map.put( 1337927692259798207L, 939301127 );
        map.put( 7365521569203165075L, 1932911422 );
        map.put( 3249061711449456093L, 1781461741 );
        map.put( 7044307770578482885L, 1225951475 );
        map.put( 679145240934000439L, 1508743569 );
        map.put( 2362163150727774296L, 463010703 );
        map.put( 2043472174417269913L, 72998027 );
        map.put( 888054609527145392L, 521776340 );
        map.put( 1760934196834053471L, 1212216739 );
        map.put( 2995986131404393260L, 1406230555 );
        map.put( 4230932472825669350L, 864955809 );
        map.remove( 436739407970504378L );
        map.remove( 6507497772654450194L );
        map.put( 5856160939709757684L, 960477742 );
        map.put( 6666817010027196561L, 963338436 );
        map.put( 3898945701238605957L, 827473087 );
        map.put( 5282391144456830511L, 273561539 );
        map.put( 3121777468287241364L, 488774903 );
        map.put( 8472383295569186480L, 495660833 );
        map.put( 3807668363575835203L, 78888441 );
        map.put( 3006879310497060730L, 89825770 );
        map.put( 775383936648376630L, 1221921424 );
        map.put( 2043472174417269913L, 900802028 );
        map.put( 5709731095909795904L, 1783428864 );
        map.put( 8145503410109304476L, 298464315 );
        map.put( 3368672082328920928L, 1326771304 );
        map.remove( 460823540867800339L );
        map.put( 1601549742926707378L, 413125604 );
        map.put( 8822160185923978135L, 72241515 );
        map.put( 4025357351841423855L, 249127761 );
        map.put( 6247569943526626638L, 1609268279 );
        map.remove( 3010510763130212919L );
        map.put( 4305653876902379784L, 231151522 );
        map.put( 935327116656637954L, 1031004402 );
        map.put( 4710672563193732764L, 1883876264 );
        map.put( 4416096795177649953L, 1818813594 );
        map.put( 5606786218706297715L, 1999001941 );
        map.put( 614835977114886009L, 42755225 );
        map.put( 2916539491337192873L, 1082123793 );
        map.put( 8063877281080677042L, 324604626 );
        map.remove( 8555101088036479300L );
        map.put( 2278571029728662170L, 1713804674 );
        map.put( 3807668363575835203L, 1235961202 );
        map.put( 2663147876226877232L, 1105884427 );
        map.put( 8822160185923978135L, 583430024 );
        map.put( 7385236124320162798L, 1043881520 );
        map.put( 4944235661775271257L, 1585155462 );
        map.put( 3335813354329350573L, 81343076 );
        map.put( 3957656695795788979L, 1537827207 );
        map.put( 8052295535231672103L, 751653612 );
        map.put( 7680351967857773330L, 525885314 );
        map.put( 5133275753966422209L, 1640177771 );
        map.remove( 8134675466026434513L );
        map.put( 1356677585092393839L, 294407379 );
        map.put( 8598528386335108826L, 1447370948 );
        map.remove( 4400986891017540496L );
        map.put( 4025357351841423855L, 1096832335 );
        map.put( 7365521569203165075L, 1600799410 );
        map.put( 777213958503907955L, 2040257320 );
        map.remove( 2472014700500782077L );
        map.put( 7576199192364039754L, 810146486 );
        map.put( 9134619581777876053L, 1693770657 );
        map.put( 685316734581028181L, 116107331 );
        map.remove( 3687215402833895895L );
        map.put( 983575306069789210L, 660383702 );
        map.put( 1961350241826940014L, 1348494854 );
        map.put( 4127696902987424377L, 990260694 );
        map.put( 2615413343635978122L, 523534618 );
        map.put( 5315407386110456795L, 179847456 );
        map.put( 2704566500934486766L, 2013169368 );
        map.put( 8145503410109304476L, 147813700 );
        map.put( 5303155213457805960L, 1532724087 );
        map.put( 777213958503907955L, 779236412 );
        map.remove( 625188483389830974L );
        map.put( 7151078824267347203L, 974592301 );
        map.put( 1643578842310394979L, 1313083714 );
        map.put( 7872325106355403507L, 2063743078 );
        map.remove( 4305653876902379784L );
        map.put( 8117280435357299328L, 315543214 );
        map.remove( 5970035410181355297L );
        map.put( 3167259547961335000L, 1088113163 );
        map.put( 1337927692259798207L, 916962375 );
        map.put( 4228249731620806491L, 1212008148 );
        map.put( 6311816692048895032L, 1645315904 );
        map.put( 3728640110980817254L, 1988022717 );
        map.put( 456597179483153945L, 1486655660 );
        map.put( 4998759893435711814L, 1920047495 );
        map.put( 7536191380548381782L, 174433579 );
        map.put( 7196225194843317564L, 226432097 );
        map.put( 7925951964963540218L, 1076079354 );
        map.put( 2455132290074262947L, 2752285 );
        map.put( 6994416964646630225L, 887658216 );
        map.put( 614835977114886009L, 1719986504 );
        map.put( 7377968612608188113L, 844288252 );
        map.put( 3218021999245475196L, 182163188 );
        map.remove( 1327883682370211904L );
        map.put( 1598011444327058344L, 1035963501 );
        map.put( 6466491581089647393L, 343449906 );
        map.put( 7377968612608188113L, 1913123232 );
        map.put( 6539460283040039215L, 388035197 );
        map.put( 5754787373919052L, 1007885218 );
        map.put( 4419458394494911762L, 1059215819 );
        map.remove( 3951672053566559300L );
        map.put( 5351867991563154179L, 1496032462 );
        map.put( 3898945701238605957L, 1221165485 );
        map.put( 777213958503907955L, 1451507127 );
        map.put( 534956423351069848L, 554226576 );
        map.put( 5351867991563154179L, 960048853 );
        map.remove( 4484985113188976123L );
        map.put( 8022367290140532055L, 1290640343 );
        map.put( 3173079676870579697L, 719133267 );
        map.put( 5360852245397979390L, 1367736624 );
        map.put( 7745334421175497250L, 1680884351 );
        map.put( 2727653611065453927L, 2119667553 );
        map.put( 8117280435357299328L, 1609800627 );
        map.put( 7816717210130953562L, 1621042355 );
        map.remove( 6505309349805244307L );
        map.put( 1415543646778981296L, 1202687209 );
        map.put( 1192126217971895617L, 485097344 );
        map.put( 8999394204358432479L, 528138448 );
        map.put( 1983689616247234979L, 1647980950 );
        map.put( 7816717210130953562L, 1578780267 );
        map.put( 90615205111412988L, 34251792 );
        map.remove( 4741724450670158877L );
        map.put( 6881581280847823271L, 640930012 );
        map.put( 3181193575923281895L, 949484553 );
        map.put( 2918010753062379165L, 743262230 );
        map.put( 5082073189268071047L, 2008543809 );
        map.put( 8881348385464385561L, 859616924 );
        map.remove( 6052581563291639850L );
        map.put( 1884665831987472105L, 1481720943 );
        map.put( 772666730986709886L, 1607809859 );
        map.remove( 8044962169968192671L );
        map.put( 2983303286633150965L, 1435920241 );
        map.put( 1382527516914971630L, 316929019 );
        map.put( 7549866353210984067L, 1232651519 );
        map.put( 8298535630731788185L, 1234848762 );
        map.put( 75674674051691239L, 692656384 );
        map.put( 432301462915495956L, 1311925344 );
        map.remove( 6585449144820841052L );
        map.put( 5219495738453451097L, 1379651999 );
        map.put( 101645387111879292L, 1737199438 );
        map.put( 9067230663747736012L, 194514479 );
        map.put( 147610999123740737L, 1602286558 );
        map.put( 1648840139075409272L, 771732410 );
        map.put( 2397825408424520439L, 1868874359 );
        map.put( 5315407386110456795L, 2125152367 );
        map.put( 2012174572643286951L, 2105973533 );
        map.put( 2232469309606195047L, 168273413 );
        map.remove( 3728943198442707693L );
        map.remove( 3121777468287241364L );
        map.put( 8522216715255411513L, 1877344842 );
        map.put( 7620280474171525052L, 1796170367 );
        map.put( 5531996732985416869L, 1990941779 );
        map.put( 3764244875503498910L, 2058535387 );
        map.put( 7184731294447160085L, 1150867177 );
        map.put( 7116658467652337533L, 55719700 );
        map.put( 8921676026706637245L, 1004285032 );
        map.put( 5057109797593310736L, 381690774 );
        map.remove( 3349847340430297101L );
        map.remove( 7184731294447160085L );
        map.put( 8999394204358432479L, 180532995 );
        map.remove( 4544111333375836957L );
        map.put( 3582354250360530227L, 132543138 );
        map.remove( 7852924775712505186L );
        map.remove( 1419244673931149142L );
        map.put( 8092488376502089411L, 1933345465 );
        map.remove( 7463876030172689865L );
        map.put( 7196225194843317564L, 1081124188 );
        map.put( 7745334421175497250L, 562409525 );
        map.put( 1686175110680998513L, 1856635115 );
        map.put( 3560399401391515912L, 754113927 );
        map.put( 7305234845338178972L, 378624353 );
        map.put( 9153637881783552236L, 1774526453 );
        map.put( 6412349297061433536L, 604071812 );
        map.put( 727232911419320693L, 231950169 );
        map.put( 2916539491337192873L, 1176102070 );
        map.put( 3580186186379941975L, 915124717 );
        map.remove( 357808459002843313L );
        map.put( 2995986131404393260L, 1267436001 );
        map.put( 3796363667593956625L, 1303294751 );
        map.remove( 8522216715255411513L );
        map.remove( 4808279649461690809L );
        map.put( 3249061711449456093L, 29892526 );
        map.remove( 7597252957354215248L );
        map.put( 3368672082328920928L, 202740790 );
        map.put( 6642754536462902443L, 1390331116 );
        map.put( 4145136802261199714L, 272623699 );
        map.put( 4632624431301093582L, 902638654 );
        map.put( 7074588392963998295L, 2043987258 );
        map.put( 4630067021743370703L, 1565019497 );
        map.remove( 1360426473482296980L );
        map.remove( 4360438470589891829L );
        map.put( 4661901755858118977L, 1846385590 );
        map.put( 5637403189331394197L, 1355811047 );
        map.put( 5815744753367784636L, 197165749 );
        map.remove( 8101260070372147327L );
        map.put( 2938237294155873993L, 834214002 );
        map.put( 4601081820670761434L, 912347630 );
        map.remove( 5856160939709757684L );
        map.put( 4360695727296862236L, 1029032976 );
        map.remove( 1576853869345172471L );
        map.put( 3852912741616014813L, 1279563371 );
        map.put( 2320448877537840628L, 421974629 );
        map.put( 5785336591454000856L, 1301818096 );
        map.put( 9201302693749383832L, 604207838 );
        map.put( 4753647582985807908L, 147660148 );
        map.put( 2250215639644779203L, 2017584528 );
        map.remove( 4230932472825669350L );
        map.put( 611141642945245274L, 987864670 );
        map.put( 7146366151102758842L, 273370235 );
        map.remove( 368304960167511989L );
        map.put( 1740459814793545834L, 1176073102 );
        map.remove( 9087224611789599289L );
        map.put( 342016645643812135L, 173022599 );
        map.put( 1072102042194326385L, 681368428 );
        map.put( 6022677831319357243L, 492122164 );
        map.remove( 7447411449902928235L );
        map.remove( 4171282020381758508L );
        map.put( 6225150635750497917L, 2026193912 );
        map.put( 9199606909951511583L, 709105737 );
        map.put( 1330051872157712939L, 1131368481 );
        map.put( 7074588392963998295L, 2024462679 );
        map.remove( 7019224268769325115L );
        map.put( 7417407080730116734L, 365263734 );
        map.remove( 4638107471699459197L );
        map.put( 5936712109738167252L, 1598765270 );
        map.put( 1436536353379318825L, 1713329379 );
        map.put( 2242352750955929855L, 1910834833 );
        map.put( 1365228346117459265L, 1338863128 );
        map.put( 2330124093299799415L, 523165382 );
        map.put( 7876179343527768652L, 1206472268 );
        map.put( 9177909119262517878L, 1728344157 );
        map.put( 7016026176964831733L, 1368710607 );
        map.remove( 947858648840440553L );
        map.put( 4710672563193732764L, 1987694309 );
        map.put( 8598528386335108826L, 276369835 );
        map.put( 727232911419320693L, 286826223 );
        map.put( 2397825408424520439L, 2044567975 );
        map.remove( 2427288381080510500L );
        map.put( 6452107932847187035L, 702129341 );
        map.remove( 230965860016790686L );
        map.put( 6666817010027196561L, 1033705267 );
        map.put( 6038192669661395646L, 1916448888 );
        map.put( 28203206195419402L, 1707371317 );
        map.put( 8871509499931908959L, 107583630 );
        map.put( 6101817141906518045L, 176829065 );
        map.put( 5542411758294920842L, 1157225648 );
        map.put( 2727653611065453927L, 857145206 );
        map.put( 3364277888958091084L, 1893981166 );
        map.put( 3225654939680241483L, 1225320306 );
        map.put( 5219495738453451097L, 618924394 );
        map.put( 2090249026654169480L, 236411319 );
        map.remove( 3613077107186115367L );
        map.put( 100608539645406394L, 1232634607 );
        map.put( 1848078995010538917L, 1788416809 );
        map.put( 3863913858448663570L, 1660959792 );
        map.remove( 2330124093299799415L );
        map.put( 8537582030145101574L, 162941464 );
        map.put( 4101510842405600149L, 1624906748 );
        map.put( 2438091594443210071L, 889458823 );
        map.put( 1617602559164953399L, 1055412428 );
        map.put( 2090249026654169480L, 1780210857 );
        map.put( 7196930923987515796L, 1442624305 );
        map.put( 3580186186379941975L, 489662184 );
        map.put( 8298535630731788185L, 1735335199 );
        map.put( 100608539645406394L, 1085834938 );
        map.put( 1947211590636407492L, 218240905 );
        map.remove( 807823251521211396L );
        map.put( 5638129608871604305L, 2027237881 );
        map.put( 2704566500934486766L, 116518710 );
        map.remove( 5485260317933743397L );
        map.put( 8787998941158508846L, 302801471 );
        map.put( 3020370682545724034L, 790614831 );
        map.put( 7527711671961679382L, 615607050 );
        map.put( 7151078824267347203L, 1290880925 );
        map.put( 5636947054833308527L, 1129830100 );
        map.put( 6576530219095004307L, 1736971079 );
        map.remove( 5195544255200069909L );
        map.put( 3208359521299786979L, 554543368 );
        map.remove( 6640019431959679750L );
        map.put( 1356677585092393839L, 1645573811 );
        map.remove( 1725091353621075003L );
        map.put( 7620280474171525052L, 874405706 );
        map.put( 2173220117849394613L, 1267633788 );
        map.put( 9020856852785116222L, 1156094838 );
        map.put( 717133647651639579L, 1110420653 );
        map.put( 9177909119262517878L, 735044236 );
        map.put( 5227055698240060236L, 771003572 );
        map.put( 8952133613792265535L, 1175040121 );

        // WHEN/THEN
        int sizeBefore = map.size();
        boolean existedBefore = map.containsKey( 2640472218067912032L );
        int valueBefore = map.get( 2640472218067912032L );
        int previous = map.put( 2640472218067912032L, 1592927945 );
        boolean existsAfter = map.containsKey( 2640472218067912032L );
        int valueAfter = map.get( 2640472218067912032L );
        int sizeAfter = map.size();
        assertEquals( "Size before put should have been 235", 235, sizeBefore );
        assertFalse( "2640472218067912032 should not exist before putting here", existedBefore );
        assertEquals( "value before should be -1", -1, valueBefore );
        assertEquals( "value returned from put should be -1", -1, previous );
        assertTrue( "2640472218067912032 should exist", existsAfter );
        assertEquals( "value after putting should be 1592927945", 1592927945, valueAfter );
        assertEquals( "Size after put should have been 236", 236, sizeAfter );
    }
}
